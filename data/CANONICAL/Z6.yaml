# Z6/String (Z4/Type)
$id: Z6
$ref: "#/definitions/objects/Z6"
definitions:
  objects:
    Z6:
      anyOf:
        - $ref: "#/definitions/objects/Z6_literal"
        - $ref: RESOLVER#/definitions/objects/RESOLVER
    Z6_Key_Pattern:
      oneOf:
        - pattern: ^Z[1-9]\d*(K[1-9]\d*)?$
          type: string
        - pattern: ^K[1-9]\d*$
          type: string
    Z6_ZnKn:
      allOf:
        - $ref: "#/definitions/objects/Z6_string"
        - $ref: "#/definitions/objects/Z6_Key_Pattern"
    Z6_literal:
      anyOf:
        - $ref: "#/definitions/objects/Z6_string"
        - $ref: "#/definitions/objects/Z6_explicit"
    Z6_string:
      allOf:
        - type: string
        - not:
            pattern: ^Z[1-9]\d*$
    Z6_explicit:
      additionalProperties: false
      properties:
        Z1K1:
          allOf:
            - $ref: Z9#/definitions/objects/Z9
            - enum:
                - Z6
              type: string
        Z6K1:
          allOf:
            - type: string
            - pattern: ^Z[1-9]\d*$
      required:
        - Z1K1
        - Z6K1
      type: object

    # Schema for typed list
    LIST_of_Z6:
      anyOf:
        - $ref: RESOLVER#/definitions/objects/RESOLVER
        - $ref: LIST#/definitions/objects/LIST_literal
          type: array
          minItems: 1
          items:
            - $ref: "#/definitions/objects/TYPE_is_Z6"
          additionalItems:
            $ref: "#/definitions/objects/Z6"
    TYPE_ref_Z6:
      allOf:
        - $ref: Z9#/definitions/objects/Z9
        - type: string
          enum:
            - Z6
    TYPE_literal_Z6:
      allOf:
        - $ref: Z4#/definitions/objects/Z4_literal
        - type: object
          properties:
            Z4K1:
              $ref: "#/definitions/objects/TYPE_is_Z6"
    TYPE_is_Z6:
      oneOf:
        - $ref: "#/definitions/objects/TYPE_ref_Z6"
        - $ref: "#/definitions/objects/TYPE_literal_Z6"
        - $ref: RESOLVER#/definitions/objects/RESOLVER_without_Z9
