# Resolver type, can resolve to any other Z4/Type
$id: RESOLVER
$ref: "#/definitions/objects/RESOLVER"
definitions:
  objects:
    # RESOLVER: any type that can resolve to other types.
    RESOLVER:
      anyOf:
        - $ref: Z9#/definitions/objects/Z9
        - $ref: Z18#/definitions/objects/Z18
        - $ref: Z7#/definitions/objects/Z7
    # RESOLVER_without_Z9: any type that can resolve to other types,
    # excluding Z9/Reference for those types that cannot be found as
    # root ZObjects (Z3, Z5, Z9, Z16, Z17, Z18 and Z39).
    RESOLVER_without_Z9:
      anyOf:
        - $ref: Z18#/definitions/objects/Z18
        - $ref: Z7#/definitions/objects/Z7_without_Z9
    # RESOLVER_without_Z7: any type that can resolve to other types,
    # excluding Z7/Function call to avoid infinite dependency in the
    # Z7/Function call schema.
    RESOLVER_without_Z7:
      anyOf:
        - $ref: Z18#/definitions/objects/Z18
        - $ref: Z9#/definitions/objects/Z9
    # RESOLVER_without_Z7_Z9: any type that can resolve to other types,
    # excluding both Z7 and Z9. This is necessary to have one Z7/Function
    # call schema that excludes Z9, so that we can have non-root ZObjects
    # that can be Z7/Function calls and don't match the Z9/Reference schema
    # as a transitive property.
    RESOLVER_without_Z7_Z9:
      anyOf:
        - $ref: Z18#/definitions/objects/Z18
